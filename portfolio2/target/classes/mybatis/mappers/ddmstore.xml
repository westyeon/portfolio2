<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ddmstore">


	<!-- 데이터 개수 와 데이터 목록 보기를 위한 동적 SQL -->

	<sql id ="search">
	<!-- searchtype이 null이거나 글자가 없다면 where절 없음 -->
		<if test="searchtype == null"></if>
		<if test="searchtype ==''.toString()"></if>
		<if test="searchtype == 'store_name'.toString()">
			where lower(store_name) like '%' || #(keyword) || '%'
		</if>
		<if test="searchtype == 'store_number'.toString()">
			where lower(store_number) like '%' || #(keyword) || '%'
		</if>
		
	</sql>
	
	<!-- 데이터 개수 찾아오기  Map에서 searchtype을 확인해서 일치하는 sql을 추가 -->
	<select id="count" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*)
		from ddmstore
		<include refid="search"></include>
	</select>
	
	<!-- <include refid="search"></include>: where는 자꾸 바뀌니까 이거로 해놓은거 -->
	<!-- 데이터 목록 가져오기
	searchtype, keyword, start, end를 입력받아서 
	데이터 목록을 리턴해주는 SQL -->
	<!-- Map은 searchtype, keyword, start, end를 묶어주기 위한 자료형임 
	항상 resulttype을 적을 때는 select절의 데이터를 묶을 수 있는 자료형을 써줌  -->
	
	<select id="list" parameterType="java.util.Map" resultType="naver.seoyeon5702.portfolio2.domain.Ddmstore">
		select store_number, store_name, store_item, store_category,phonenumber, store_layer, dong_mark
		from (select rownum rnum, store_number, store_name, store_item, store_category,phonenumber, store_layer, dong_mark
			from(select store_number, store_name, store_item, store_category,phonenumber, store_layer, dong_mark
				from ddmstore <include refid="search"></include>
					order by store_number desc))
		where rnum &gt;= #{start} and rnum &lt;= #{end}		
	</select>
	
	
	<!-- 상세보기 
	기본키를 대입받아서 기본키에 해당하는 모든 컬럼을 가져옵니다. -->
	<select id="detail" parameterType="java.lang.String" resultType="naver.seoyeon5702.portfolio2.domain.Ddmstore">
		select store_number, store_name, store_item, store_category,phonenumber, store_layer, dong_mark
		from ddmstore
		where store_number=#{store_number}
	</select>
	
	<!-- 삽입하기
	필요한 컬럼의 값을 입력받아서 삽입을 합니다.
	삽입이나 삭제나 갱신은 무조건 정수를 리턴하기 때문에 resultType이 없음
	 -->
	 <select id="maxnumber" resultType="java.lang.String">
	 	select max(store_number)
	 	from ddmstore
	 </select>
	 
	 <insert id="insert"
	 parameterType="naver.seoyeon5702.portfolio2.domain.Ddmstore">
	 	insert into ddmstore(store_number,store_name,store_item,store_category,phonenumber,store_layer,dong_mark)
	 	values(#{store_number}, #{store_name}, #{store_item},#{store_category}, #{phonenumber},#{store_layer},#{dong_mark})
	 </insert>
	
	
	
	
	
<!-- 출력할 데이터 번호를 받아서 ddmstore 테이블에서  store_number의 내림차순 정렬을 수행할 데이터 가져오기
	부등호 크다는 >= : &gt 작다는 <=:&lt로 적어야함 -->
<!-- 	
<select id="list" parameterType="java.util.Map" resultType="naver.seoyeon5702.portfolio2.domain.Ddmstore">
	select store_number, store_name, store_item, store_category,phonenumber,store_layer,dong_mark
	from (select rownum rnum, store_number,store_name,store_item,store_category,phonenumber,store_layer,dong_mark
		from(select * from ddmstore order by store_number desc))
	where rnum &gt;= #{start} and rnum &lt;= #{end}

</select>
-->

 
<!-- 상세 보기를 위한 메소 -->
<!-- 
<select id="detail" parameterType="java.lang.String" resultType="naver.seoyeon5702.portfolio2.domain.Ddmstore">
	select store_number, store_name, store_item, store_category,phonenumber,store_layer,dong_mark
	from ddmstore
	where store_number =#{store_number}
</select>
-->

</mapper>